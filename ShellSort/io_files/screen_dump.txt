#Test Case 1: array size = 15
#Part 1: Shell Insertion Sort
./proj1 i io_files/15.b io_files/15_seq.t io_files/15s.b
Number of long integers read: 15
Number of long integers stored: 15
Length of sequence: 8
Number of comparisons: 9.000000e+01
Number of moves: 1.650000e+02
I/O time: 0.000000e+00
Sorting time: 0.000000e+00
diff io_files/15s.b pa1_samples/15s.b
diff io_files/15_seq.t pa1_samples/15_seq.t
#Part 2: Shell Selection Sort
./proj1 s io_files/15.b io_files/15_seq.t io_files/15s.b
Number of long integers read: 15
Number of long integers stored: 15
Length of sequence: 8
Number of comparisons: 2.330000e+02
Number of moves: 2.250000e+02
I/O time: 0.000000e+00
Sorting time: 0.000000e+00
diff io_files/15s.b pa1_samples/15s.b
diff io_files/15_seq.t pa1_samples/15_seq.t
#Test Case 2: array size = 1,000
#Part 1: Shell Insertion Sort
./proj1 i io_files/1000.b io_files/1000_seq.t io_files/1000s.b
Number of long integers read: 1000
Number of long integers stored: 1000
Length of sequence: 40
Number of comparisons: 3.549800e+04
Number of moves: 6.645300e+04
I/O time: 0.000000e+00
Sorting time: 0.000000e+00
diff io_files/1000s.b pa1_samples/1000s.b
diff io_files/1000_seq.t pa1_samples/1000_seq.t
#Part 2: Shell Selection Sort
./proj1 s io_files/1000.b io_files/1000_seq.t io_files/1000s.b
Number of long integers read: 1000
Number of long integers stored: 1000
Length of sequence: 40
Number of comparisons: 1.474965e+06
Number of moves: 9.286500e+04
I/O time: 0.000000e+00
Sorting time: 0.000000e+00
diff io_files/1000s.b pa1_samples/1000s.b
diff io_files/1000_seq.t pa1_samples/1000_seq.t
#Test Case 3: array size = 10,000
#Part 1: Shell Insertion Sort
./proj1 i io_files/10000.b io_files/10000_seq.t io_files/10000s.b
Number of long integers read: 10000
Number of long integers stored: 10000
Length of sequence: 67
Number of comparisons: 6.218200e+05
Number of moves: 1.172531e+06
I/O time: 0.000000e+00
Sorting time: 0.000000e+00
#Part 2: Shell Selection Sort
./proj1 s io_files/10000.b io_files/10000_seq.t io_files/10000s.b
Number of long integers read: 10000
Number of long integers stored: 10000
Length of sequence: 67
Number of comparisons: 1.496031e+08
Number of moves: 1.652133e+06
I/O time: 0.000000e+00
Sorting time: 1.500000e-01
#Test Case 4: array size = 100,000
#Part 1: Shell Insertion Sort
./proj1 i io_files/100000.b io_files/100000_seq.t io_files/100000s.b
Number of long integers read: 100000
Number of long integers stored: 100000
Length of sequence: 101
Number of comparisons: 9.610236e+06
Number of moves: 1.821565e+07
I/O time: 1.000000e-02
Sorting time: 3.000000e-02
#Part 2: Shell Selection Sort
./proj1 s io_files/100000.b io_files/100000_seq.t io_files/100000s.b
Number of long integers read: 100000
Number of long integers stored: 100000
Length of sequence: 101
Number of comparisons: 1.499419e+10
Number of moves: 2.581623e+07
I/O time: 0.000000e+00
Sorting time: 1.574000e+01
#Test Case 5: array size = 1,000,000
#Part 1: Shell Insertion Sort
./proj1 i io_files/1000000.b io_files/1000000_seq.t io_files/1000000s.b
Number of long integers read: 1000000
Number of long integers stored: 1000000
Length of sequence: 142
Number of comparisons: 1.374666e+08
Number of moves: 2.614537e+08
I/O time: 2.000000e-02
Sorting time: 4.500000e-01
#Part 2: Shell Selection Sort
./proj1 s io_files/1000000.b io_files/1000000_seq.t io_files/1000000s.b
Number of long integers read: 1000000
Number of long integers stored: 1000000
Length of sequence: 142
Number of comparisons: 1.499920e+12
Number of moves: 3.719615e+08
I/O time: 2.000000e-02
Sorting time: 1.684320e+03
